@using CheckBoardGameVersion3.Data.Models
@using Microsoft.AspNetCore.SignalR.Client;
@inject NavigationManager NavigationManager


@if (InGame)
{
    <SelectChecker HubsConnection="HubConnect" TableId="@TableId"></SelectChecker>
}
else
{
    <div style=" align-items: center;text-align: -webkit-center;">
        <div style="text-align: -webkit-center">
            <div style="display: flex;align-items: center;justify-content: center;">
                <div>
                    <div class="blockChat JoinTable">
                        @foreach (var table in Tables)
                        {
                            <div class="joinGame">
                                <button style="width: 200px;" class="myButton" @onclick="()=>JoinGame(table)">Join table </button>
                            </div>
                        }

                    </div>
                    <div class="joinGame">
                        <button style="width: 200px;" class="myButton" @onclick="()=>RefreshTables()">Refresh</button>
                    </div>
                </div>
                <div>
                    <div style="text-align: center;color: #E0C6BD;">
                        <h3 style="font-family: 'Belleza', sans-serif;margin-top: 40px;">CHECKERS ONLINE</h3>
                    </div>
                    <div class="createGame">
                        <button class="myButton"
                            @onclick="CreateGame">
                            Create Game
                        </button>
                    </div>
                    <img src="/Pages/CheckBoard.png" alt="gde fotka suka?" />
                </div>
            </div>
        </div>
    </div>
}

@code {
    public bool InGame;
    public bool InBoard;

    public List<string> Tables = new List<string>();
    public List<string> ConnectionTables = new();
    public string TableId = default;

    HubConnection HubConnect = new HubConnectionBuilder()
           .WithUrl("https://localhost:7065/BoardHub")
           .Build();

    protected override async Task OnInitializedAsync()
    {
        await RefreshTables();
        HttpClient client = new HttpClient();
        HubConnect.On("UpdateTable", () =>
        {
            RefreshTables();
        });

    }

    async Task JoinGame(string tableId)
    {
        await HubConnect.StartAsync();
        this.TableId = tableId;
        await HubConnect.SendAsync("JoinTable", tableId);
        InGame = true;
    }

    async Task RefreshTables()
    {
        HttpClient client = new HttpClient();
        Tables = await client.GetFromJsonAsync<List<string>>
                 ("https://localhost:7065/Api/GetTables");
    }

    async Task CreateGame()
    {
        await HubConnect.StartAsync();
        TableId = Guid.NewGuid().ToString();
        InGame = true;
    }
}