@using CheckBoardGameVersion3.Data.Models
@using Microsoft.AspNetCore.SignalR.Client;
@inject NavigationManager NavigationManager


@if (inGame)
{
    <SelectChecker HubsConnection="hubConnection" TableId="@tableId"></SelectChecker>
}
else
{
    <div style="text-align: -webkit-center">
        <div class="createGame">
            <button class="myButton"
                @onclick="CreateGame">
                Create Game
            </button>
        </div>
        @foreach (var table in tables)
        {
            <div class="joinGame">
                <button class="myButton" @onclick="()=>JoinGame(table)">Join table </button>
            </div>
        }
    </div>
}

@code {
    bool inGame;
    bool inBoard;

    List<string> tables = new List<string>();
   
    List<string> ConnectionTables = new();
    List<SetTeam> colors = new();
    string tableId = default;

    HubConnection hubConnection = new HubConnectionBuilder()
           .WithUrl("https://localhost:7065/BoardHub")
           .Build();

    protected override async Task OnInitializedAsync()
    {
        await RefreshTables();
    }



    async Task JoinGame(string tableId)
    {
        await hubConnection.StartAsync();
        this.tableId = tableId;
        await hubConnection.SendAsync("JoinTable", tableId);
        inGame = true;
    }

    async Task RefreshTables()
    {
        HttpClient client = new HttpClient();
        tables = await client.GetFromJsonAsync<List<string>>
                 ("https://localhost:7065/Api/GetTables");
       
    }


    async Task CreateGame()
    {
        await hubConnection.StartAsync();
        //tableId = Guid.NewGuid().ToString();
        //await hubConnection.SendAsync("JoinTable", tableId);
        tableId = Guid.NewGuid().ToString();
        inGame = true;
    }
}